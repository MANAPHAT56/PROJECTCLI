# ----------------------------
# Global Settings
# ----------------------------
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    # ปิด access log (หรือใช้ /dev/null)
    access_log /dev/null;

    # Limit request ป้องกัน DDoS
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    # เปิด gzip compression
    gzip on;
    gzip_min_length 1000;
    gzip_comp_level 5;
    gzip_types text/plain application/json text/css application/javascript application/x-javascript text/javascript image/svg+xml;

    # ----------------------------
    # Upstream (API Node.js)
    # ----------------------------
    upstream myapp {
        server node-server:5000;
    }

    # ----------------------------
    # Redirect HTTP → HTTPS
    # ----------------------------
    server {
        listen 80;
        server_name toteja.co api.toteja.co;
        return 301 https://$host$request_uri;
    }

    # ----------------------------
    # Frontend (React SPA) - toteja.co
    # ----------------------------
    server {
        listen 443 ssl;
        server_name toteja.co;

        # SSL Certificates
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root /var/www/toteja.co;   # Path ไปที่ build ของ React
        index index.html;
# เสิร์ฟ asset ให้ไม่ fallback ไป index.html
     location ^~ /assets/ {
    try_files $uri =404;
    access_log off;
    add_header Cache-Control "public, max-age=31536000, immutable";
   }

        # ✅ ป้องกัน white screen เวลา refresh (React SPA)
        location / {
            try_files $uri /index.html;
        }

        # Static files caching
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|webp)$ {
            expires 6M;
            access_log off;
            add_header Cache-Control "public";
        }
    }

    # ----------------------------
    # Backend API - api.toteja.co
    # ----------------------------
    server {
        listen 443 ssl;
        server_name api.toteja.co;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        client_max_body_size 50M;

        location / {
            proxy_pass http://myapp;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cookie_path / "/; secure; HttpOnly; SameSite=Lax";
        }

        # phpMyAdmin (ถ้ามี)
        location /phpmyadmin/ {
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/phpmyadmin.htpasswd;

            proxy_pass http://phpmyadmin-container/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # NGINX Status
        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            deny all;
        }
    }
}
