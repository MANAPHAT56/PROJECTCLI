
services:
  react-app:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app      # สมมุติโค้ด React อยู่โฟลเดอร์ frontend
      - /app/node_modules    # ป้องกันการแมปโฟลเดอร์ node_modules จาก host
    command:  sh -c "npm install && npm run dev -- --host"
    ports:
      - "5173:5173"          # เปิดพอร์ต 3000 (host) ไป 5173 (container, vite default)
    environment:
      - CHOKIDAR_USEPOLLING=true  # ช่วยเรื่อง hot reload บน Windows/Linux บางกรณี
      - HOST=0.0.0.0
    networks:
      - monitor-net
  db:
    image: mysql:5.7.16
    container_name: mysql-container
    environment:    
      MYSQL_ROOT_PASSWORD: mypassword
      MYSQL_DATABASE: my_db
      MYSQL_USER: root

    volumes:
      - mysql-data:/var/lib/mysql
      # - type: bind
      #   source: D:\\best\\xamppja\\tote
      #   target: /var/lib/mysql
    networks:
      - monitor-net
    command:
      - --performance_schema=ON
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-container
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: mypassword
    networks:
      - monitor-net
    depends_on:
      - db
  redis:
    image: redis:latest
    container_name: redis-container
    volumes:
      - redis-data:/data
    networks:
      - monitor-net
  node-server:
    build:
      context: .
    networks:
      - monitor-net
    depends_on:
      - db
    # deploy:
    #   replicas: 3
    ports:
      - "5000:5000"
    # restart: always
  nginx:
    image: nginx:latest
    container_name: nginx-server
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/api.toteja.co/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/api.toteja.co/privkey.pem:/etc/nginx/ssl/privkey.pem
      - ./phpmyadmin.htpasswd :/etc/nginx/phpmyadmin.htpasswd

      # - ./secrets/grafana.htpasswd:/etc/nginx/grafana.htpasswd
     
    depends_on:
      - node-server
    networks:
      - monitor-net
networks:
  monitor-net:
    driver: bridge

volumes:
  redis-data:
  mysql-data: